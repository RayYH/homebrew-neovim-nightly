name: Update neovim-nightly Cask (from template)

on:
  schedule:
    - cron: "*/10 * * * *"
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run updater
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x scripts/update_neovim-nightly.sh || chmod +x scripts/update_neovim_nightly.sh
          (test -x scripts/update_neovim-nightly.sh && scripts/update_neovim-nightly.sh) || scripts/update_neovim_nightly.sh

      - name: Create PR
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          base: master
          branch: chore/update-neovim-nightly
          add-paths: |
            Casks/neovim-nightly.rb
          commit-message: "chore(cask): update neovim-nightly from template"
          title: "Update neovim-nightly Cask checksums"
          body: "Automated update of Casks/neovim-nightly.rb"
          delete-branch: true

      - name: Merge PR (squash) or enable auto-merge
        if: steps.cpr.outputs.pull-request-number
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = Number('${{ steps.cpr.outputs.pull-request-number }}');
            const { owner, repo } = context.repo;

            try {
              await github.rest.pulls.merge({ owner, repo, pull_number: pr, merge_method: 'squash' });
              core.info(`Merged PR #${pr}`);
            } catch (e) {
              core.warning(`Immediate merge failed: ${e.message}`);
              const { data: prInfo } = await github.rest.pulls.get({ owner, repo, pull_number: pr });
              await github.graphql(
                `mutation($pullRequestId: ID!, $method: PullRequestMergeMethod!) {
                   enablePullRequestAutoMerge(input: { pullRequestId: $pullRequestId, mergeMethod: $method }) { clientMutationId }
                 }`,
                { pullRequestId: prInfo.node_id, method: 'SQUASH' }
              );
              core.info(`Enabled auto-merge for PR #${pr}`);
            }